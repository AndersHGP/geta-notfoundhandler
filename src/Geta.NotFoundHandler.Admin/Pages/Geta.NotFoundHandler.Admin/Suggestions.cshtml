@page
@model Geta.NotFoundHandler.Admin.Pages.Geta.NotFoundHandler.Admin.SuggestionsModel

@await Component.InvokeAsync("Card", new { message = Model.Message })

<div class="table-responsive mt-3">
    <table class="table table-hover table-sm">
        <thead>
        <tr>
            <th>Old URL</th>
            <th>New URL</th>
            <th class="col-1"></th>
            <th class="col-1"></th>
        </tr>
        </thead>
        <tbody>
        @for (var i = 0; i < Model.Items.Count; i++)
        {
            var item = Model.Items[i];
            var formId = $"redirect{i}";
            <tr class="align-middle">
                <td>
                    <form method="post" id="@formId">
                        <input type="hidden" asp-for="Items[i].OldUrl" value="@item.OldUrl">
                    </form>
                    @item.OldUrl (@item.Count errors)
                </td>
                <td>
                    <input type="text" class="form-control" form="@formId" asp-for="Items[i].NewUrl">
                    <span form="@formId" asp-validation-for="Items[i].NewUrl" class="text-danger"></span>
                </td>
                <td>
                    <div class="d-grid gap-2">
                        <button type="submit" class="btn btn-primary" form="@formId"
                                asp-page-handler="create">
                            <span data-feather="plus"></span> add
                        </button>
                    </div>
                </td>
                <td>
                    <div class="d-grid gap-2">
                        <button type="submit" class="btn btn-danger"
                                asp-page-handler="ignore" asp-route-old-url="@item.OldUrl">
                            <span data-feather="eye-off"></span> ignore
                        </button>
                    </div>
                </td>
            </tr>
        }
        </tbody>
    </table>
    @await Component.InvokeAsync("Pager", new { Model.Items })
</div>