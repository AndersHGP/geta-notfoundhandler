@page
@using Geta.NotFoundHandler.Core.Redirects
@model Geta.NotFoundHandler.Admin.Pages.Geta.NotFoundHandler.Admin.IndexModel

@await Component.InvokeAsync("Card", new { message = Model.Message })

<form method="get">
    <div class="search-container">
        <input class="form-control w-100" type="text" placeholder="Search" aria-label="Search">
        <button type="submit" class="btn btn-primary">
            <span data-feather="search"></span> search
        </button>
    </div>
</form>

<form method="post">
    <div class="table-responsive mt-3">
        <table class="table table-hover table-sm">
            <thead>
            <tr>
                <th>Old URL</th>
                <th>New URL</th>
                <th class="col-1 text-center">Wildcard</th>
                <th class="col-1">Redirect Type</th>
                <th class="col-1"></th>
            </tr>
            </thead>
            <tbody>
            <tr>
                <td>
                    <input type="text" class="form-control" asp-for="Redirect.OldUrl">
                    <span asp-validation-for="Redirect.OldUrl" class="text-danger"></span>
                </td>
                <td>
                    <input type="text" class="form-control" asp-for="Redirect.NewUrl">
                    <span asp-validation-for="Redirect.NewUrl" class="text-danger"></span>
                </td>
                <td class="text-center align-middle">
                    <input type="checkbox" class="form-check-input" asp-for="Redirect.WildCardSkipAppend">
                </td>
                <td>
                    <select class="form-select" asp-for="Redirect.RedirectType">
                        <option selected value="@RedirectType.Permanent">@RedirectType.Permanent</option>
                        <option value="@RedirectType.Temporary">@RedirectType.Temporary</option>
                    </select>
                </td>
                <td>
                    <div class="d-grid gap-2">
                        <button type="submit" class="btn btn-primary"
                                asp-page-handler="create">
                            <span data-feather="plus"></span> add
                        </button>
                    </div>
                </td>
            </tr>
            @foreach (var item in Model.Items)
            {
                <tr class="align-middle">
                    <td>@item.OldUrl</td>
                    <td>@item.NewUrl</td>
                    <td class="text-center align-middle">
                        @await Component.InvokeAsync("CheckboxReadonly", new { isChecked = item.WildCardSkipAppend })
                    </td>
                    <td>@item.RedirectType</td>
                    <td>
                        <div class="d-grid gap-2">
                            <button type="submit" class="btn btn-danger"
                                    asp-page-handler="delete" asp-route-oldurl="@item.OldUrl">
                                <span data-feather="trash-2"></span> delete
                            </button>
                        </div>
                    </td>
                </tr>
            }
            </tbody>
        </table>
        @await Component.InvokeAsync("Pager", new { Model.Items })
    </div>
</form>